{
	"nodes":[
		{"type":"text","text":"RISC-V instruction set\n* arithmetic \n\t* *add*\n\t* *sub*\n\t* *and*\n\t* *or*\n* memory-reference\n\t- *ld* - load double\n\t- *sd* - store double\n* conditional branch\n\t* *beq* - branch if equal","id":"46517e22c3250581","x":-2060,"y":-900,"width":265,"height":380},
		{"type":"text","text":"-  For each instruction fist two instruction are identical \n\t1. send the program counter (PC) to the memory that contains the code and **fetch** the instruction from that memory\n\t2. Read one or two registers, using fields of the instruction ( *ld* instruction only need to read one register)","id":"e7ce94834becc502","x":-1740,"y":-803,"width":370,"height":283},
		{"type":"text","text":"3. All instruction classes use the ALU after reading the registers,\n\t1.  memory reference - address calculation\n\t2. arithmetic - logical - operation execution\n\t3. conditional - equality test","id":"43296cc6bf9d181d","x":-1330,"y":-729,"width":340,"height":269},
		{"type":"text","text":"* Three instruction classes,\n\t1. memory reference\n\t2. arithmetic-logical\n\t3. branches\n","id":"bd0cdd6da622dc3f","x":-2020,"y":-1140,"width":280,"height":160},
		{"type":"text","text":"4. Memory-reference instruction will need to access the memory either to read data for load or write date for store","id":"dc0dd72a13aa4da5","x":-1558,"y":-373,"width":298,"height":133},
		{"type":"text","text":"4. An arithmetic-logical or load  instructions must write the data from the ALU or memory back into a register. ","id":"a65be24cc3aabc2c","x":-1240,"y":-373,"width":300,"height":133},
		{"type":"text","text":"4. Conditional branch instruction we may need to change the next instruction based on the comparison. ","id":"021aa307f96a5c99","x":-920,"y":-373,"width":300,"height":133},
		{"type":"text","text":"- For the 64-bit RISC-V architecture, nearly all of these state and logic elements will have inputs and outputs that are 64 bits wide","id":"3c83bc1b9aca23e7","x":780,"y":-340,"width":345,"height":140},
		{"type":"file","file":"Processor/images/singlecycle_1.png","id":"722bac162994fdc2","x":-440,"y":-594,"width":1003,"height":754},
		{"type":"text","text":"- Program  Counter (PC)\n\t-  64 bit register  ","id":"544959a795db441c","x":-1429,"y":880,"width":349,"height":60},
		{"type":"text","text":"- 64 bits adder","id":"612d6da176b3470a","x":-500,"y":880,"width":250,"height":60},
		{"type":"file","file":"Processor/images/adder.png","id":"8d755c03f4a30df0","x":-662,"y":460,"width":444,"height":320},
		{"type":"file","file":"Processor/images/imem.png","id":"ea922f27481bc1ee","x":62,"y":436,"width":617,"height":414},
		{"type":"file","file":"Processor/images/registerFile.png","id":"d70136fcc75cfbf9","x":845,"y":446,"width":674,"height":394},
		{"type":"text","text":"- register file \n\t- input - 5 bits register address x 3,  64bits write data , 1bit RegWrite signal\n\t- output - 64 bits data1, data2\n- 32 general purpose registers","id":"b15b9fb6bff57606","x":1059,"y":940,"width":460,"height":140},
		{"type":"text","text":"-  Instruction memory \n\t- inputs - 64bit instruction  **address**\n\t- output - 32bit instruction \n- combination logic (since it is used only for read)","id":"e12bfe5b283898cd","x":199,"y":940,"width":480,"height":160},
		{"type":"file","file":"Processor/images/ALU.png","id":"8039894570f957f9","x":1760,"y":466,"width":400,"height":355},
		{"type":"text","text":"- ALU\n\t- inputs -  64bits input x 2 , 4bits ALU operation \n\t- outputs -  1bit zero signal , 64bits output ","id":"c48588de6987fa0d","x":1760,"y":910,"width":360,"height":150},
		{"type":"file","file":"Processor/images/PC.png","id":"55389e641afb30cf","x":-1460,"y":408,"width":444,"height":413},
		{"type":"file","file":"Processor/images/Full_single_cycle_procssor.png","id":"ab616449dab10670","x":-1040,"y":1640,"width":543,"height":400},
		{"type":"file","file":"Processor/images/pipline_processor_full.png","id":"b87b5d47282c52aa","x":-191,"y":1640,"width":571,"height":363}
	],
	"edges":[
		{"id":"ff9102e3738d20f3","fromNode":"46517e22c3250581","fromSide":"right","toNode":"e7ce94834becc502","toSide":"left"},
		{"id":"bcc75e456deb84b7","fromNode":"e7ce94834becc502","fromSide":"right","toNode":"43296cc6bf9d181d","toSide":"left"},
		{"id":"9aabed8601919129","fromNode":"43296cc6bf9d181d","fromSide":"bottom","toNode":"dc0dd72a13aa4da5","toSide":"top"},
		{"id":"9576540ce9a90292","fromNode":"bd0cdd6da622dc3f","fromSide":"bottom","toNode":"46517e22c3250581","toSide":"top"},
		{"id":"0e7a0f32ed8d5f7d","fromNode":"43296cc6bf9d181d","fromSide":"bottom","toNode":"a65be24cc3aabc2c","toSide":"top"},
		{"id":"449ecc9f4bc36b62","fromNode":"43296cc6bf9d181d","fromSide":"bottom","toNode":"021aa307f96a5c99","toSide":"top"},
		{"id":"116de28b18d9f11a","fromNode":"dc0dd72a13aa4da5","fromSide":"bottom","toNode":"722bac162994fdc2","toSide":"left"},
		{"id":"6735127659cae096","fromNode":"a65be24cc3aabc2c","fromSide":"bottom","toNode":"722bac162994fdc2","toSide":"left"},
		{"id":"2637372ae7f5ef6e","fromNode":"021aa307f96a5c99","fromSide":"bottom","toNode":"722bac162994fdc2","toSide":"left"},
		{"id":"736bf6b9c3d300bc","fromNode":"722bac162994fdc2","fromSide":"right","toNode":"3c83bc1b9aca23e7","toSide":"left"},
		{"id":"ea4cd209e20ea33f","fromNode":"722bac162994fdc2","fromSide":"bottom","toNode":"ea922f27481bc1ee","toSide":"top"},
		{"id":"8dfad7f3f8eec367","fromNode":"722bac162994fdc2","fromSide":"bottom","toNode":"8d755c03f4a30df0","toSide":"top"},
		{"id":"9bd8b6a7fca30e62","fromNode":"8d755c03f4a30df0","fromSide":"bottom","toNode":"612d6da176b3470a","toSide":"top"},
		{"id":"a5134c7d87a10e99","fromNode":"ea922f27481bc1ee","fromSide":"bottom","toNode":"e12bfe5b283898cd","toSide":"top"},
		{"id":"a191c6a2e83e720f","fromNode":"722bac162994fdc2","fromSide":"bottom","toNode":"d70136fcc75cfbf9","toSide":"top"},
		{"id":"8bbac2433568a5cb","fromNode":"d70136fcc75cfbf9","fromSide":"bottom","toNode":"b15b9fb6bff57606","toSide":"top"},
		{"id":"31ca876d282eb99d","fromNode":"722bac162994fdc2","fromSide":"bottom","toNode":"8039894570f957f9","toSide":"top"},
		{"id":"7eb11a58ec8cfbf1","fromNode":"722bac162994fdc2","fromSide":"bottom","toNode":"55389e641afb30cf","toSide":"top"},
		{"id":"c2f70ea940d7da17","fromNode":"55389e641afb30cf","fromSide":"bottom","toNode":"544959a795db441c","toSide":"top"}
	]
}